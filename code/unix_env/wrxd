#!/bin/sh
### BEGIN INIT INFO
# Provides: wrxd
# Default-Start:  2 3 4 5
# Default-Stop:   0 1 6
# Required-Start:
# Required-Stop:
# Short-Description: run wrx daemon
# Description: run wrx daemon
### END INIT INFO

WRXD=wrxd
WRXD_EXEC=/usr/local/bin/$WRXD
WRXD_ARGS="-bg"
#WRXD_ARGS="-bg -down"

#DEV=wrx
#DEV=test
#DEVID=cape-bone-${DEV}

DEV=SPIDEV0
DEVID=BB-${DEV}

DEV_PRU=wrx-P
DEVID_PRU=cape-bone-${DEV_PRU}

CAPE=${DEVID}-00A0
PRU=${DEVID_PRU}-00A0
SLOTS=`ls /sys/devices/bone_capemgr.*/slots`

[ -x $WRXD_EXEC ] || exit 1

case "$1" in

  start)
    echo "Starting wrxd"

	if [ /lib/firmware/${CAPE}.dts -nt /lib/firmware/${CAPE}.dtbo ] ; then
		echo compile ${DEV} device tree;
		dtc -O dtb -o /lib/firmware/${CAPE}.dtbo -b 0 -@ /lib/firmware/${CAPE}.dts;
# don't unload old slot because this is known to cause panics; must reboot
	fi

	if ! grep -q ${DEV} $SLOTS ; then
		echo load ${DEV} device tree;
		echo ${DEVID} > $SLOTS;
		sleep 2;
	fi

	if [ /lib/firmware/${PRU}.dts -nt /lib/firmware/${PRU}.dtbo ] ; then
		echo compile ${DEV_PRU} device tree;
		(cd /lib/firmware; dtc -O dtb -o ${PRU}.dtbo -b 0 -@ ${PRU}.dts);
# don't unload old slot because this is known to cause panics; must reboot
	fi
	
	if ! grep -q ${DEV_PRU} $SLOTS ; then
		echo load ${DEV_PRU} device tree;
		echo ${DEVID_PRU} > $SLOTS;
	fi

# the test fixture is started separately by the Cloud9 IDE
	if [ $DEV != "test" ] ; then
		echo -n "Start wrxd: "
		start-stop-daemon --start --background --exec $WRXD_EXEC -- $WRXD_ARGS
		RETVAL=$?
		if [ $RETVAL -eq 0 ] ; then
			echo "OK"
		else
			echo "FAIL"
		fi
	fi

    # have to do something here that returns zero status, otherwise systemd immediately stops us. Why?
    date
    ;;

  stop)
	if [ $DEV != "test" ] ; then
		echo -n "Stopping wrxd: "
		start-stop-daemon --stop --name $WRXD
		RETVAL=$?
		if [ $RETVAL -eq 0 ] ; then
			echo "OK"
		else
			echo "FAIL"
		fi
	fi
    ;;

  status)
    if [ -n "`/bin/pidof $WRXD`" ] ; then
        echo "wrxd is running."
    else
        echo "wrxd is not running."
    fi
    ;;

  restart)
    $0 stop && sleep 1 && $0 start
    ;;

  *)
    echo "Usage: /etc/init.d/wrxd {start|stop|status|restart}"
    exit 1

esac

exit 0
